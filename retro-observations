29th January
Changed to OOP approach
Did some whiteboarding
Made a lot of design decisions quickly
Exciting, intense session
Easy to lose connection with the code
Easy to get a bit lost, even on a small codebase, when we make a radical change

22nd January
It is too easy for people to get "target fixated" and start breaking the ensemble rules
Use "inter-turn" to explain syntax
Use hand-raise to interrupt coding session if people are running away

15th January
Still using the chat between 5 minute coding sessions
Used the fake-it approach to incrementally develop a test
Always means we get a passing test quickly
Broke problem down into smaller steps (e.g. header and footer in output)
Generated lots of small functions doing one thing well
- risk: we could get lost with all the little functions

8th January
We will pick an approach and review after each ensemble cycle

What did we do:
Agreed direction and approach
Chat between 5 minute coding sessions is helpful
Tidying up code and refactoring names was helpful
Fixed data files
Used the "fake-it" approach on one of the tests.

Observations
Adding print lines to get through a test suggests the tests are too big
(print lines are a debugging tool)
Having a higher level list of what we are doing would be helpful (e.g. a user journey map)

Questions
Are we going too fast? e.g. do we _all_ understand the list comprehension
We are we not using the python csv package?

Feelings
Felt good
Taking a couple of minutes between 'rounds' to re-orient helped everyone stay engaged
returning to the the user story each time kept us aligned

